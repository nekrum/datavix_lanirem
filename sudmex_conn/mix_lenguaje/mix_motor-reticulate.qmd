---
title: "Combinación de Lenguajes"
author: "Edgar"
date: "2022-10-16"
format: 
  html:
    self-contained: true
    code-fold: false
    toc: true
    toc-title: Contenido
    toc-location: left
    df-print: paged
    theme:
      light: flatly
      dark: darkly
---

## Objetivo

Probar el uso de **chunk's** de código de Python y R en el mismo documento usando **Reticulate**. 


## Código

La ejecución de código se puede hacer usando diferentes motores para cada lenguaje.
[**Knitr** es una herramienta para la generación de reportes dinámicos que permite integrar R en documentos]{.aside}
**Quarto** usa por defecto **Knitr** para ejecutar R y el kernel de **Jupyter** para ejecutar python.
[**Jupyter** es un componente de JupyterNotebooks que permite ejecutar código de R y python]{.aside}

Si usamos la opción `#| python.reticulate = FALSE` se puede ejecutar el código pero las variables generadas en un lenguaje
no pueden ser usadas por el otro lenguaje.

Para ejecutar chunk's de código que pueda ser procesado por ambos lenguajes  es necesario instalar y cargar **reticulate**,
[**Reticulate** es un programa que permite la ejecución de código Python dentro de R]{.aside} que puede ser instalado 
directamente en R o usando `renv()` para tener un ambiente replicable. Ademas se pueden usar en conjunto ambientes virtuales
para el código Python.


:::{.callout-warning}
Usar Reticulate requiere su instalación previa así como cargarlo en uno de los trozos de código iniciales. 
:::


###  Código R

Con **Reticulate** podemos generar una variable en un chunk de R

```{r}
# Código R cargando reticulate
library(reticulate)
x <- installed.packages()[,1]
x[1:5]
```

### Código Python

Podemos usar la variable generada llamando el objeto `r` y la variable que generamos en el código anterior es un atributo
de ese objeto.

```{python}
# Usando variable generada en el código R
y = len(r.x)
y
```

Incluso podemos acceder las variables generadas en Python con código R accediendo al objeto `py` y usando variable
como nombre del elemento en la lista.

```{r}
# Usando variable creada en el chuck de Python
py$y
```

## Conclusión

Este método solo requiere de instalar **Reticulate** y **Jupyter** en Python que pueden estar instalados directamente
en los interpretes instalados en el sistema o pueden estar instalados en ambientes virtuales configurados para el análisis.

Quarto también puede ejecutar código R y Python usando unicamente el motor de Jupyter instalando un kernel para R
pero su configuración implica instalar el kernel en Jupyter, un paquete en R para comunicarse con el kernel y siendo
en general una instalación mas elaborada que la que involucra **Reticulate**.